{"version":3,"sources":["reportWebVitals.js","CommonConfig.jsx","DateList.jsx","trend.jsx","TimeList.jsx","TrendList.jsx","Welcomeboard.jsx","YearList.jsx","TrendDisplay.jsx","RootBoard.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CommonConfig","port","host","DateList","props","useState","year","yearValue","dates","setDates","onoff","setOnoff","changed","setChanged","navigate","useNavigate","getMonth","date","Math","floor","getDay","myDateClick","event","preventDefault","clickedValue","target","getAttribute","onChangeMonth","onChangeDay","useEffect","console","log","url","postData","FormData","append","axios","post","res","data","catch","err","error","to","map","item","index","className","href","onClick","value","Trend","dateCompose","month","day","TimeList","times","setTimes","onTimeClick","timeSelected","onChangeTime","getMinute","time","getFormatStr","Array","from","TrendList","trends","setTrends","pData","getPostData","clickTrend","stopPropagation","clickedTrend","onChangeTrend","bind","this","style","width","position","title","views","Welcomeboard","marginTop","YearList","years","setYears","myYearClick","yearSelected","onChangeYear","get","type","echarts","require","TrendDisplay","CHART_ID","trendtitle","trendTitle","x_data","setXData","y_data","setYData","option","setMyOption","getOption","mychart","init","document","getElementById","setOption","clear","text","subtext","tooltip","show","trigger","legend","left","toolbox","orient","top","color","backgroundColor","borderColor","borderWidth","padding","showTitle","feature","dataZoom","readOnly","lang","optionToContent","opt","axisData","xAxis","series","table","name","i","l","length","dataView","saveAsImage","boundaryGap","yAxis","max","inverse","id","height","RootBoard","setYear","setMonth","setDay","setTime","trend","setTrend","myChangeYear","myChangeMonth","monthSelected","myChangeDay","daySelected","myChangeTime","myChangeTrend","trendSelected","getYMDT","exact","path","element","ReactDOM","render"],"mappings":"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","file":"static/js/main.c671327f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","function CommonConfig() {\r\n\r\n    const port = \":8073\";\r\n    // \"http://localhost\"\r\n    // \"http://101.35.156.253\"\r\n    const host = \"http://101.35.156.253\";\r\n    return {port: port,\r\n            host: host};\r\n}\r\n\r\nexport default CommonConfig;","import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport CommonConfig from \"./CommonConfig\";\r\n\r\nfunction DateList(props) {\r\n    const [yearValue, setYear] = useState(props.year);\r\n    const [dates, setDates] = useState([]);\r\n    //const [month, setMonth] = useState(props.month);\r\n    //const [day, setDay] = useState(() => props.day);\r\n    const [onoff, setOnoff] = useState(false);\r\n    const [changed, setChanged] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        setChanged(true);\r\n        console.log(changed);\r\n    }, [yearValue]);\r\n\r\n    useEffect(() => {                \r\n        let url = CommonConfig().host + CommonConfig().port + \"/trends/dates\";\r\n        let postData = new FormData();\r\n        postData.append(\"year\", yearValue);\r\n        axios.post(url, postData).then((res) => {\r\n            setDates(dates => res ? res.data : []);\r\n        }).catch((err) => {\r\n            console.error(err);\r\n        });\r\n        return () => {setDates(dates => []);};\r\n    }, [yearValue]);\r\n\r\n    function getMonth(date) {\r\n        return Math.floor(date / 100);\r\n    }\r\n\r\n    function getDay(date) {\r\n        return date % 100;\r\n    }\r\n\r\n    function changeMonth(monthSelected) {\r\n        props.onChangeMonth(monthSelected);\r\n    }\r\n\r\n    function changeDay(daySelected) {\r\n        props.onChangeDay(daySelected);\r\n    }    \r\n\r\n    function myDateClick(event) {\r\n        event.preventDefault();\r\n        const clickedValue = event.target.getAttribute(\"value\");\r\n        //setMonth(month => getMonth(clickedValue));\r\n        //setDay(day => getDay(clickedValue));\r\n        props.onChangeMonth(getMonth(clickedValue));\r\n        props.onChangeDay(getDay(clickedValue));\r\n        setOnoff(onoff => ~onoff);          \r\n    }    \r\n\r\n    useEffect(() => {        \r\n        if (changed) {\r\n            navigate(\"/time\");\r\n        }\r\n    }, [onoff]);\r\n\r\n    return (\r\n        <div>\r\n            <Link to=\"/\">Home</Link> / <Link to=\"/year\">Year</Link> / Date<br /><br />\r\n            {/* <br></br>Year is : {yearValue}; */}\r\n            <table >\r\n                <tbody>\r\n                <tr>\r\n                    <th>\r\n                        Date (MM/dd)\r\n                    </th>\r\n                </tr>\r\n                {dates.map((item, index) => {\r\n                    return (<tr key={index}>\r\n                                <td>\r\n                                    <button className=\"btn btn-default\" href=\"\" onClick={myDateClick} value={item}>\r\n                                        {getMonth(item)}月 {getDay(item)}日\r\n                                    </button>\r\n                                </td>\r\n                            </tr>);\r\n                })}  \r\n                </tbody>\r\n            </table>\r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DateList;\r\n","\r\nfunction Trend(props) {\r\n    const dateCompose = (month, day) => {\r\n        return month * 100 + day;\r\n    };\r\n    return {dateCompose: dateCompose};\r\n}\r\n\r\nexport default Trend;\r\n","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Trend from \"./trend\";\r\nimport { useNavigate } from \"react-router\";\r\nimport CommonConfig from \"./CommonConfig\";\r\n\r\n\r\nfunction TimeList(props) {\r\n\r\n    const [year, setYear] = useState(props.year);\r\n    const [month, setMonth] = useState(() => props.month);\r\n    const [day, setDay] = useState(() => props.day);\r\n    const [times, setTimes] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        // console.log(month, day);\r\n        // let [nyear, nmonth, nday, ntime] = props.getYMDT();\r\n        // setYear(year => nyear);\r\n        // setMonth(month => nmonth);\r\n        // setDay(day => nday);\r\n        let url = CommonConfig().host + CommonConfig().port + \"/trends/times\";\r\n        let postData = new FormData();\r\n        postData.append(\"year\", year);\r\n        postData.append(\"date\", Trend().dateCompose(month, day));\r\n        axios.post(url, postData).then((res) => {\r\n            setTimes(times => res ? res.data : []);\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n        return () => {setTimes(times => []);};\r\n    }, [year, month, day]);\r\n\r\n    function onTimeClick(event) {\r\n        event.preventDefault();\r\n        const timeSelected = event.target.getAttribute(\"value\");\r\n        console.log(timeSelected);\r\n        props.onChangeTime(timeSelected); \r\n        navigate(\"/list\");\r\n    }\r\n\r\n    const getHour = (time) => {\r\n        return Math.floor(time / 100);\r\n    };\r\n    \r\n    const getMinute = (time) => {\r\n        return Math.floor(time % 100);\r\n    };\r\n\r\n    const getFormatStr = (value) => {\r\n        if (value < 10){\r\n            return '0' + value;\r\n        }\r\n        return '' + value;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to=\"/\">Home </Link> / <Link to=\"/year\"> Year </Link> / <Link to=\"/date\"> Date </Link> / Time<br /><br />\r\n            <table>\r\n                <tbody>\r\n                <tr>\r\n                    <th>\r\n                        Time (hh:mm)\r\n                    </th>\r\n                </tr>\r\n                {Array.from(times).map((item, index) => {\r\n                    return (<tr key={index}>\r\n                                <td>\r\n                                    <button className=\"btn btn-default\" value={item} onClick={onTimeClick}>\r\n                                        {getFormatStr(getHour(item))} : {getFormatStr(getMinute(item))}\r\n                                    </button>\r\n                                </td>\r\n                            </tr>);\r\n                })}\r\n                </tbody>\r\n            </table>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TimeList;\r\n","//import React from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Trend from \"./trend\";\r\nimport { useNavigate } from \"react-router\";\r\nimport CommonConfig from \"./CommonConfig\";\r\n\r\nfunction TrendList(props) {\r\n\r\n    function getPostData() {\r\n        let postData = new FormData();\r\n        postData.append(\"year\", props.year);\r\n        postData.append(\"date\", Trend().dateCompose(props.month, props.day));\r\n        postData.append(\"time\", props.time);\r\n        console.log(props.time, props.day);\r\n        return postData;\r\n    }\r\n\r\n    const [trends, setTrends] = useState([]);\r\n    const [year, setYear] = useState(props.year);    \r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const url = CommonConfig().host + CommonConfig().port + \"/trends/trends\";        \r\n        const pData = getPostData();\r\n        axios.post(url, pData).then((res) => {\r\n            setTrends((trends) => {return (res && res.data) ? res.data : [];});\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }, [year]);\r\n\r\n    const clickTrend = function(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        let clickedTrend = event.target.getAttribute(\"value\");\r\n        // console.log(clickedTrend);\r\n        props.onChangeTrend(clickedTrend);\r\n        navigate(\"/topic\");\r\n    }.bind(this);\r\n\r\n    return (\r\n        <div>\r\n            <Link to=\"/\">Home </Link> / <Link to=\"/year\"> Year </Link> / <Link to=\"/date\"> Date </Link> / <Link to=\"/time\"> Time </Link> / List<br />\r\n            <br />\r\n            <table>\r\n                <tbody>\r\n                <tr>\r\n                    <th style={{width: 50 + \"px\"}}>Index</th>\r\n                    <th>Topic</th>\r\n                    <th>Hotness</th>\r\n                </tr>                \r\n                {trends.map((item, index) => {\r\n                    return (\r\n                            <tr key={index}>\r\n                                <td>\r\n                                    {item.position}\r\n                                </td>\r\n                                <td>\r\n                                    <a href=\"\" onClick={clickTrend} value={item.title}>{item.title}</a>\r\n                                </td>\r\n                                <td>\r\n                                    {item.views}\r\n                                </td>                                                                \r\n                            </tr>)\r\n                })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TrendList;","import { Link } from \"react-router-dom\";\r\n\r\nfunction Welcomeboard(props) {\r\n    return (<div>\r\n        <Link to=\"/\">Home </Link><br /><br />\r\n        Kindly press the button 请点击下方按钮 <br />        \r\n        <Link to=\"year\">\r\n            <button className=\"btn btn-primary\">\r\n                Start 开始\r\n            </button>\r\n        </Link>\r\n        <div style={{marginTop: 30 + \"px\"}}>\r\n                                            \r\n                ReadMe:\r\n                <ul style={{width: \"82%\"}}>\r\n                    <li key=\"1\">This project aims to record the Hot Topics List on Weibo (Chinese version of 'Twitter Trendings'), in memory of what happened, and in avoidance of clearance.</li>\r\n                    <li key=\"2\">Web crawler is based on Selenium+Webdriver, deployed on the server and run automatically every 15 minutes to crawl the Hot Topic List on Weibo, and store the data in MySQL DB.</li>\r\n                    <li key=\"3\">Seperated F n B Development. Front-end is supported by ReactJs and Echarts, and Back-end by Spring Boot and Mybatis.</li>\r\n                    <li key=\"4\">There may still be bugs existing in the project, thank you for your visit and support.</li>\r\n                    <li key=\"5\">Welcome to contact the author Rylon: kaigendo at 126 dot com</li>\r\n                </ul>\r\n                <br />\r\n                开发说明：\r\n                <ul style={{width: \"80%\"}}>\r\n                    <li key=\"1\">基于Selenium+Webdriver爬虫，部署后每15分钟自动爬取一次热搜列表，并存入MySQL数据库中</li>\r\n                    <li key=\"2\">前后端分离，后端基于Spring Boot, Mybatis，前端基于React, Echarts</li>\r\n                    <li key=\"3\">目前仍有部分bug，感谢您的访问与支持</li>\r\n                    <li key=\"4\">联系作者Rylon：kaigendo at 126 dot com</li>                   \r\n                </ul>\r\n            \r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default Welcomeboard;","import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CommonConfig from \"./CommonConfig\";\r\n\r\nfunction YearList(props) {\r\n\r\n    const [years, setYears] = useState([]);\r\n\r\n    const [yearValue, setYear] = useState(() => props.year);    \r\n    const navigate = useNavigate();\r\n\r\n    const myChangeYear = function(e) {\r\n        console.log(yearValue);\r\n        //setYear(yearValue);\r\n        props.onChangeYear(yearValue);\r\n        navigate(\"/date\");        \r\n    };\r\n\r\n    const onInputChange = function(e) {\r\n        setYear(yearValue => e.target.value);\r\n        e.stopPropagation();\r\n    };\r\n\r\n    const myYearClick = function(event) {\r\n        event.preventDefault();\r\n        let yearSelected = event.target.getAttribute(\"value\");\r\n        props.onChangeYear(yearSelected);\r\n        navigate(\"/date\")\r\n    }\r\n\r\n    useEffect(() => {                \r\n        let url = CommonConfig().host + CommonConfig().port + \"/trends/years\";\r\n        //let postData = new FormData();\r\n        //postData.append(\"year\", yearValue);\r\n        axios.get(url).then((res) => {\r\n            setYears(years => res ? res.data : []);\r\n        }).catch((err) => {\r\n            console.error(err);\r\n        });\r\n        return () => {setYears(years => []);};\r\n    }, [yearValue]);\r\n\r\n    return (\r\n        <div>            \r\n            {/* <input value={yearValue} onChange={onInputChange.bind(this)} />\r\n            <button className=\"col-md-3\" onClick={myChangeYear.bind(this)}>Click to The Year!</button>   */}\r\n            <Link to=\"/\">Home</Link> / Year<br/><br />\r\n            <div>\r\n                <table>\r\n                    <tbody>\r\n                    <tr>\r\n                        <th>Year</th>\r\n                    </tr>\r\n                    {years.map((item, index) => {\r\n                            return (    \r\n                                    <tr key={index}>\r\n                                        <td>\r\n                                            <button type=\"button\" className=\"btn btn-default\" onClick={myYearClick} value={item}>\r\n                                                {item}年\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>                                        \r\n                                    );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>  \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default YearList;","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CommonConfig from \"./CommonConfig\";\r\nimport Trend from \"./trend\";\r\nvar echarts = require('echarts');\r\n\r\nfunction TrendDisplay(props) {\r\n\r\n    const CHART_ID = \"main_chart\";\r\n    const [trendTitle, setTitle] = useState(props.trendtitle);\r\n    const [year, setYear] = useState(props.year);\r\n    const [month, setMonth] = useState(props.month);\r\n    const [day, setDay] = useState(props.day);\r\n    const [x_data, setXData] = useState([0,1]);\r\n    const [y_data, setYData] = useState([0,1]);\r\n    const [option, setMyOption] = useState({});\r\n\r\n    useEffect(() => {\r\n        setMyOption(option => getOption());\r\n    }, [x_data, y_data]);\r\n\r\n    useEffect(() => {\r\n        let mychart = echarts.init(document.getElementById(CHART_ID));\r\n        // let option = getOption();\r\n        // step 5:设置图表配置项。使用刚指定的配置项和数据显示图表\r\n\t    mychart.setOption(option);\r\n        return () => {mychart.clear();}\r\n    }, [option]);\r\n\r\n    useEffect(() => {\r\n        let postData = new FormData();\r\n        postData.append(\"year\", year);\r\n        postData.append(\"date\", Trend().dateCompose(month, day));\r\n        postData.append(\"trendName\", trendTitle);\r\n        console.log(year);\r\n        const url = CommonConfig().host + CommonConfig().port + \"/trends/positions\";\r\n        axios.post(url, postData).then((res) => {\r\n            setXData(x_data => {\r\n                return res.data.map(item => item.time);\r\n            });\r\n            setYData(y_data => {\r\n                return res.data.map(item => item.position);\r\n            });\r\n            console.log(\"X_DATA and Y_DATA updated!\");\r\n            console.log(res.data);\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }, [year, month, day, trendTitle]);\r\n\r\n    const getOption = () => {\r\n        return {\r\n            title: {\r\n                text: '热搜榜位图',\r\n                subtext: '#' + trendTitle + '#',\r\n            },\r\n            tooltip : {\r\n                show: true,\r\n                trigger: 'axis'\r\n            },\r\n            legend: {\r\n                data:['Index'],\r\n                left: \"center\"\r\n            },\r\n            toolbox: {\r\n                show : true,\r\n                orient: 'horizontal',\r\n                left: 'right',\r\n                top: 'top',\r\n                color: ['#1e90ff','#22bb22','#4b0082','#d2691e'],\r\n                backgroundColor: 'rgba(0,0,0,0)',  // 工具箱背景颜色\r\n                borderColor: '#ccc',  // 工具箱边框颜色\r\n                borderWidth: 0,  // 工具箱边框线宽\r\n                padding: 5,  // 工具箱内边距\r\n                showTitle: true,\r\n                feature : {\r\n                    //mark: {show: true,title: {mark:'辅助线-开关',markUndo:'辅助线-删除',markClear:'辅助线-清空'},lineStyle:{width:1,color:'#1e90ff',type:'dashed'}},\r\n                    dataZoom:{\r\n                        show:true,title:'数据视图',readOnly:true,\r\n                        lang:['数据视图','美团','刷新'],\r\n                        optionToContent: function(opt){\r\n                            console.log(opt);\r\n                            var axisData = opt.xAxis[0].data;\r\n                            var series = opt.series;\r\n                            var table = '<table style=\"width:100%;text-align:center\"><tbody><tr>'+'<td>时间</td>'+'<td>'+series[0].name+'</td>'+'</tr>';\r\n                            for(var i=0,l=axisData.length;i<l;i++){\r\n                                table += '<tr>'\r\n                                    + '<td>' + axisData[i] + '</td>'\r\n                                    + '<td>' + series[0].data[i] + '</td>'                                    \r\n                                    + '</tr>';\r\n                            }\r\n                            table += '</tbody></table>';\r\n                            return table;\r\n                        }\r\n                    },\r\n                    dataView : {show: true, readOnly: false},\r\n                    // magicType : {show: true, title:{line:'动态类型切换-折线图',bar:'动态类型切换-柱形图', stack:'动态类型切换-堆积',tiled:'动态类型切换-平铺'}, type: ['line', 'bar','stack','tiled']},\r\n                    // restore : {show: true,title:'还原',color:'black'},\r\n                    saveAsImage : {show: true,title:'保存为图片',type:'jpeg',lang:['点击本地保存']}\r\n                }\r\n            },\r\n            //calculable : true,\r\n            // dataZoom:{\r\n            //     show: false,\r\n            //     realtime: true,\r\n            //     start: 20,\r\n            //     end: 80\r\n            // },\r\n            xAxis : [\r\n                {\r\n                    type : 'category',\r\n                    boundaryGap: true, // 类目起始和结束两端空白策略,默认true留空,false则顶头\r\n                    data : function(){                       \r\n                        return x_data.map((item, index) => (Math.floor(item / 100) + ':' + Math.floor(item % 100)));\r\n                    }()\r\n                }\r\n            ],\r\n            yAxis : [\r\n                {\r\n                    max: 50,\r\n                    inverse: true,\r\n                    type : 'value'\r\n                }\r\n            ],\r\n            series : [\r\n                {\r\n                    name:'Index',\r\n                    type:'line',\r\n                    data:function(){                        \r\n                        return y_data;\r\n                    }()\r\n                }            \r\n            ]\r\n        };        \r\n    }\r\n    \r\n    return (<div>\r\n        <Link to=\"/\">Home </Link> / <Link to=\"/year\"> Year </Link> / <Link to=\"/date\"> Date </Link> / <Link to=\"/time\"> Time </Link> / <Link to=\"/list\"> List </Link> / Topic<br />\r\n        <div><h4 className=\"text-muted\">Line Chart of Topic's Number on the hot topic list</h4> </div>\r\n        <div id={CHART_ID} style={{width: 94+\"%\", height: 500+\"px\"}}></div>\r\n    </div>);\r\n};\r\n\r\nexport default TrendDisplay;\r\n\r\n/**\r\n * [\r\n    {\r\n        \"id\": 21,\r\n        \"position\": 21,\r\n        \"time\": 1028,\r\n        \"title\": null,\r\n        \"views\": 367814\r\n    },\r\n    {\r\n        \"id\": 101,\r\n        \"position\": 7,\r\n        \"time\": 2235,\r\n        \"title\": null,\r\n        \"views\": 648486\r\n    }\r\n]\r\n */","import { useState } from \"react\";\r\nimport { Route, BrowserRouter as Router, Routes } from 'react-router-dom';\r\nimport { Navigate } from \"react-router\";\r\nimport DateList from \"./DateList\";\r\nimport TimeList from \"./TimeList\";\r\nimport TrendList from \"./TrendList\";\r\nimport Welcomeboard from \"./Welcomeboard\";\r\nimport YearList from \"./YearList\";\r\nimport TrendDisplay from \"./TrendDisplay\";\r\n\r\nfunction RootBoard(props) {\r\n\r\n    const [year, setYear] = useState(() => 2021);\r\n    const [month, setMonth] = useState(() => 12);\r\n    const [day, setDay] = useState(() => 4);\r\n    const [time, setTime] = useState(() => 500);\r\n    const [trend, setTrend] = useState(() => \"青春环游记\");\r\n\r\n    //let navigate = useNavigate();\r\n\r\n    const myChangeYear = function (yearSelected) {\r\n        setYear(year => yearSelected);\r\n        console.log(\"Set year to: \" + year);\r\n        //navigate(\"/dateList\");\r\n    }.bind(this);\r\n\r\n    const myChangeMonth = function (monthSelected) {\r\n        setMonth(month => monthSelected);\r\n        console.log(\"Set month to: \", month);\r\n    }.bind(this);\r\n\r\n    const myChangeDay = function (daySelected) {\r\n        setDay(day => daySelected);\r\n        console.log(\"Set day to: \", day);\r\n    }.bind(this);\r\n\r\n    const myChangeTime = function (timeSelected) {\r\n        setTime(time => timeSelected);\r\n        console.log(\"Set time to \", time);\r\n    }.bind(this);\r\n\r\n    const myChangeTrend = function (trendSelected) {\r\n        setTrend(trend => trendSelected);\r\n        console.log(\"Set topic to \", trend);\r\n    }.bind(this);\r\n\r\n    const getYMDT = function() {        \r\n        return [year, month, day, time];\r\n    }.bind(this);\r\n\r\n    return (                               \r\n        <Router>\r\n            <div id=\"wholeboard\">\r\n                <div id=\"upbgboard\">\r\n                    <p> Weibo Hot Topics Record 在这里，记录中国</p>\r\n                </div>\r\n                <div id=\"routes\">\r\n                    <Routes>                        \r\n                        <Route exact path=\"/\" element={<Welcomeboard />}></Route>\r\n                        <Route exact path=\"/year\" element={<YearList year={year} onChangeYear={myChangeYear}/>}></Route>\r\n                        <Route exact path=\"/date\" element={<DateList  year={year} month={month} day={day} \r\n                                                                onChangeMonth={myChangeMonth}\r\n                                                                onChangeDay={myChangeDay}/>}></Route>\r\n                        <Route exact path=\"/time\" element={<TimeList  year={year} month={month} day={day} time={time}\r\n                                                                getYMDT={getYMDT}\r\n                                                                onChangeTime={myChangeTime}/>}></Route>\r\n                        <Route exact path=\"/list\" element={<TrendList year={year} month={month} day={day} time={time}\r\n                                                                onChangeTrend={myChangeTrend} />}></Route>\r\n                        <Route exact path=\"/topic\" element={<TrendDisplay year={year} month={month} day={day} trendtitle={trend} />} ></Route>\r\n                        <Route path=\"/*\" element={<Navigate to=\"/\" />}></Route>\r\n                    </Routes>                \r\n                </div>\r\n                <div id=\"dnbgboard\">\r\n                    The current y / m / d / t is : <br />\r\n                    {year} / {month} / {day} / {time}\r\n                </div>\r\n            </div>\r\n        </Router>        \r\n    );\r\n}\r\n\r\nexport default RootBoard;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport RootBoard from './RootBoard';\n\nReactDOM.render(\n    <RootBoard>      \n    </RootBoard>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n  // <React.StrictMode>"],"sourceRoot":""}